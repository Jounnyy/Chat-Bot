{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kang_Yatna\\\\Desktop\\\\chatbot\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport data from \"./data.json\";\nimport ProductData from \"./product.json\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Header, Product, ProductList, ProductName, ProductDescription, ProductPrice, Chat, ChatInputWrapper, ChatInput, ChatSubmit, ChatBox, BubbleBot, BubbleUser } from \"./styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [productList, setProductList] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [chatList, setChatList] = useState([]);\n  const [step, setStep] = useState(\"\");\n\n  const submitChat = () => {\n    let list;\n    let chatBot;\n    let chatUser = [];\n\n    if (chatList.length === 0) {\n      chatBot = data.bot[0];\n      setStep(\"name\");\n    } else if (step === \"name\") {\n      chatUser = [...chatList, {\n        sender: \"user\",\n        chat: chatInput\n      }];\n      chatBot = data.bot[1];\n      setStep(\"product\");\n    }\n\n    setChatInput(\"\");\n    if (chatInput.length > 0) setChatList(chatUser);\n    list = [...chatUser, chatBot];\n    setTimeout(() => {\n      setChatList(list);\n    }, 700);\n  };\n\n  useEffect(() => {\n    setProductList(ProductData.product);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Toko Cuy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Product, {\n      children: productList.map((product, index) => {\n        return /*#__PURE__*/_jsxDEV(ProductList, {\n          children: [/*#__PURE__*/_jsxDEV(ProductName, {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProductDescription, {\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProductPrice, {\n            children: [\"Rp. \", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      children: [/*#__PURE__*/_jsxDEV(ChatBox, {\n        children: chatList.map((chat, index) => {\n          return chat.sender === \"bot\" ? /*#__PURE__*/_jsxDEV(BubbleBot, {\n            children: chat.chat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(BubbleUser, {\n            children: chat.chat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInputWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(ChatInput, {\n          value: chatInput,\n          onChange: event => {\n            setChatInput(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatSubmit, {\n          onClick: submitChat,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"83cywRXv1NbE81lt2rxKUbZOQvw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Kang_Yatna/Desktop/chatbot/src/App.js"],"names":["data","ProductData","useState","useEffect","Container","Header","Product","ProductList","ProductName","ProductDescription","ProductPrice","Chat","ChatInputWrapper","ChatInput","ChatSubmit","ChatBox","BubbleBot","BubbleUser","App","productList","setProductList","chatInput","setChatInput","chatList","setChatList","step","setStep","submitChat","list","chatBot","chatUser","length","bot","sender","chat","setTimeout","product","map","index","name","description","price","event","target","value"],"mappings":"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","sourcesContent":["import data from \"./data.json\";\nimport ProductData from \"./product.json\";\nimport { useState, useEffect } from \"react\";\n\nimport {\n  Container,\n  Header,\n  Product,\n  ProductList,\n  ProductName,\n  ProductDescription,\n  ProductPrice,\n  Chat,\n  ChatInputWrapper,\n  ChatInput,\n  ChatSubmit,\n  ChatBox,\n  BubbleBot,\n  BubbleUser,\n} from \"./styled\";\n\nconst App = () => {\n  const [productList, setProductList] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [chatList, setChatList] = useState([]);\n  const [step, setStep] = useState(\"\");\n\n  const submitChat = () => {\n    let list;\n    let chatBot;\n    let chatUser = [];\n\n    if (chatList.length === 0) {\n      chatBot = data.bot[0];\n      setStep(\"name\");\n    } else if (step === \"name\") {\n      chatUser = [...chatList, { sender: \"user\", chat: chatInput }];\n      chatBot = data.bot[1];\n      setStep(\"product\");\n    }\n    setChatInput(\"\");\n\n    if (chatInput.length > 0) setChatList(chatUser);\n    list = [...chatUser, chatBot];\n\n    setTimeout(() => {\n      setChatList(list);\n    }, 700);\n  };\n\n  useEffect(() => {\n    setProductList(ProductData.product);\n  }, []);\n\n  return (\n    <Container>\n      <Header>Toko Cuy</Header>\n      {/* Ini Product */}\n      <Product>\n        {productList.map((product, index) => {\n          return (\n            <ProductList key={index}>\n              <ProductName>{product.name}</ProductName>\n              <ProductDescription>{product.description}</ProductDescription>\n              <ProductPrice>Rp. {product.price}</ProductPrice>\n            </ProductList>\n          );\n        })}\n      </Product>\n\n      {/* Ini Chat */}\n      <Chat>\n        <ChatBox>\n          {chatList.map((chat, index) => {\n            return chat.sender === \"bot\" ? (\n              <BubbleBot>{chat.chat}</BubbleBot>\n            ) : (\n              <BubbleUser>{chat.chat}</BubbleUser>\n            );\n          })}\n        </ChatBox>\n        <ChatInputWrapper>\n          <ChatInput\n            value={chatInput}\n            onChange={(event) => {\n              setChatInput(event.target.value);\n            }}\n          />\n          <ChatSubmit onClick={submitChat}>Submit</ChatSubmit>\n        </ChatInputWrapper>\n      </Chat>\n    </Container>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}